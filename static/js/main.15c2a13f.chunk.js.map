{"version":3,"sources":["Components/Cards/Cards.module.css","App.module.css","Components/Cards/Cards.jsx","API/index.js","Components/Chart/Chart.jsx","Components/CountryPicker/CountryPicker.jsx","App.js","index.js","Components/Chart/Chart.module.css","images/rotate-phone-icon.png","images/image.png","images/Stay.png","images/github-icon.png","images/linkedin-icon.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toLocaleDateString","letality","Number","toFixed","decimals","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","fetchDailyData","map","dailyData","total","date","reportDate","console","log","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","slice","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","rotate","icon","src","RotatePhoneIcon","alt","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","onChange","e","target","i","key","App","state","fetchedData","setState","this","stay","StayAtHome","width","height","image","coronaImage","footer","icons","rel","href","github","GitHubIcon","linkedin","LinkedinIcon","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15c2a13f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2XqFC\",\"card\":\"Cards_card__1ak5A\",\"infected\":\"Cards_infected__bZ078\",\"recovered\":\"Cards_recovered__1wTBM\",\"deaths\":\"Cards_deaths__1YvrA\",\"letality\":\"Cards_letality__3CMB6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\",\"stay\":\"App_stay__2yoeB\",\"linkedin\":\"App_linkedin__2okkV\",\"github\":\"App_github__2zfEA\",\"icons\":\"App_icons__EJB4h\"};","import React from 'react'; \nimport styles from './Cards.module.css'\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup'\nimport cx from 'classnames'\n\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\n    if(!confirmed){\n        return 'Loading...'\n    }\n    return(\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"space-around\">\n                <Grid item component={Card} xs={12} md={2}  className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Confirmados</Typography>\n                        <Typography variant = \"h5\">\n                            <CountUp start= {0} end={confirmed.value} duration={1.5} separator=\",\"  //Separador dos valores\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\"> {new Date(lastUpdate).toLocaleDateString()}</Typography>\n                        <Typography variant='body2'> Casos confirmados de COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card}  xs={12} md={2} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recuperados</Typography>\n                        <Typography variant = \"h5\">\n                            <CountUp start= {0} end={recovered.value} duration={1.5} separator=\",\"  //Separador dos valores\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\"> {new Date(lastUpdate).toLocaleDateString()}</Typography>\n                        <Typography variant='body2'> Pessoas recuperadas da COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card}  xs={12} md={2} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Mortes</Typography>\n                        <Typography variant = \"h5\">\n                            <CountUp start= {0} end={deaths.value} duration={1.5} separator=\",\"  //Separador dos valores\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\"> {new Date(lastUpdate).toLocaleDateString()}</Typography>\n                        <Typography variant='body2'> Mortes pela COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card}  xs={12} md={2} className={cx(styles.card, styles.letality)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Letalidade</Typography>\n                        <Typography variant = \"h5\">\n                        <CountUp start= {0.1} end={Number(((deaths.value/confirmed.value)*100).toFixed(2))} decimals={2}  duration={2.5}  //Separador dos valores\n                            />\n                            %\n                        </Typography>\n                        <Typography color=\"textSecondary\"> {new Date(lastUpdate).toLocaleDateString()}</Typography>\n                        <Typography variant='body2'> Letalidade da COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default Cards","import axios from 'axios'\n\nconst url = \" https://covid19.mathdro.id/api\"\n\nexport const fetchData = async (country) => {\n    let changeableUrl=url;\n\n    if(country){\n        changeableUrl= `${url}/countries/${country}`\n    }\n\n    try{\n        //Fazemos isso para não ter que colocar response.data.confirmed\n        const {data: {confirmed, recovered,deaths, lastUpdate}} = await axios.get(changeableUrl)\n\n        const modifiedData= {\n            confirmed: confirmed,\n            recovered: recovered,\n            deaths:deaths,\n            lastUpdate: lastUpdate\n        }\n\n        return modifiedData;\n\n    }catch(error){\n\n    }\n}\n\n\nexport const fetchDailyData = async() =>{\n    try{\n        const {data} = await axios.get(`${url}/daily`)\n        const modifiedData = data.map((dailyData)=> ({\n            confirmed: dailyData.confirmed.total,\n            deaths:dailyData.deaths.total,\n            date:dailyData.reportDate\n        }));\n        return modifiedData; \n    }catch(error) {\n        console.log(error)\n\n    }\n} \n\n\nexport const fetchCountries = async () => {\n    try{\n        const {data: {countries}} = await axios.get(`${url}/countries`)\n        return countries.map(country=>country.name) \n    }catch(error){\n\n    }\n}\n\n\n","import React, {useState, useEffect} from 'react'; \nimport {fetchDailyData} from '../../API/index';\nimport {Line, Bar} from 'react-chartjs-2'\nimport styles from './Chart.module.css'\nimport RotatePhoneIcon from '../../images/rotate-phone-icon.png'\n\n\n\nconst Chart = ({data, country}) => {\n    const[dailyData, setDailyData]= useState([])\n\n    useEffect(()=> {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData())\n        }\n\n\n        fetchAPI();\n    }, []);\n\n\n    const lineChart = (\n        dailyData.length!==0?(\n            <Line \n                data={{\n                    labels:dailyData.map(({date})=>new Date(date).toLocaleDateString().slice(0,5)),\n                    datasets: [{    //Datasets são as informações que teremos\n                        data: dailyData.map(({confirmed})=> confirmed),\n                        label: \"Infectados\",\n                        borderColor: \"#3333ff\",\n                        fill:true\n                    }, {\n                        data: dailyData.map(({deaths})=> deaths),\n                        label: \"Mortos\",\n                        borderColor: \"red\",\n                        backgroundColor: \"rgba(255,0,0,0.5)\",\n                        fill:true\n\n                    }]\n                }}\n            />\n        ): null\n    )\n\n\n    const barChart = (\n        data.confirmed?(\n            <Bar \n            data={{\n                labels:[\"Infectados\", \"Recuperados\", \"Mortos\"],\n                datasets: [{\n                    label:\"Pessoas\",\n                    backgroundColor:[\"rgba(0,0,255, 0.5)\", \"rgba(0,255,0,0.5)\", \"rgba(255,0,0,0.5)\"],\n                    data: [data.confirmed.value,data.recovered.value, data.deaths.value]\n                }]\n\n            }}\n            options={{\n                legend:{display:false},\n                title: {display:true, text: `Estado atual do ${country}`}\n            }}\n            />\n        ):null\n    );\n\n    return(\n        <>\n            <div className={styles.container}>\n                {country ? barChart :lineChart}\n            </div>\n            {dailyData.length!==0 || data.confirmed ?(\n                <div className={styles.rotate}>\n                    <img className={styles.icon} src={RotatePhoneIcon} alt =\"Logo de rotação de celular\"/>\n                    <p>Gire seu telefone para melhorar sua experiência</p>\n                </div>\n            ):null}\n        </>\n    )\n}\n\nexport default Chart","import React, {useState, useEffect} from 'react'; \nimport {NativeSelect, FormControl} from '@material-ui/core';\n\nimport {fetchCountries} from '../../API/index'\n\nconst CountryPicker = ({handleCountryChange}) => {\n    \n    const [fetchedCountries, setFetchedCountries] = useState([])\n\n\n    useEffect(()=> {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries())\n\n        }\n\n\n        fetchAPI();\n    }, [setFetchedCountries]);\n\n\n    return(\n        fetchedCountries.length!==0 ?(\n        <FormControl>\n            <NativeSelect onChange={(e)=> {handleCountryChange(e.target.value)}}>\n                <option value = \"\">Global</option>\n                {fetchedCountries.map((country, i)=> <option value ={country} key={i}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>): null\n    )\n}\n\nexport default CountryPicker","import React from 'react';\n//Consigo fazer o código abaixo por causa do arquivo index.js\n//Que se encontra no Components\n\nimport {Cards, Chart, CountryPicker} from './Components'\nimport styles from './App.module.css'\nimport {fetchData} from './API'\nimport {Typography} from '@material-ui/core'\n\nimport coronaImage from './images/image.png'\nimport StayAtHome from  './images/Stay.png'\nimport GitHubIcon from './images/github-icon.png'\nimport LinkedinIcon from './images/linkedin-icon.png'\n\n\n\n\n\nclass App extends React.Component {\n  state={\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount(){\n    const fetchedData = await fetchData();\n\n    this.setState({data:fetchedData})\n\n  }\n\n  handleCountryChange = async(country) => {\n    const fetchedData = await fetchData(country);\n\n    this.setState({data:fetchedData, country:country})\n\n  }\n\n\n\n  render(){\n      return (\n        <>\n          <img className={styles.stay}src={StayAtHome} width={5} height={5} alt=\"Em Casa Instagram\"/>\n          <div className={styles.container}>\n            <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\n            <CountryPicker handleCountryChange={this.handleCountryChange}/>\n            <Cards data={this.state.data} /> \n            <Chart data={this.state.data} country={this.state.country} /> \n            <div className={styles.footer}>\n              <div className={styles.icons}>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://github.com/Alyssonprr7\"}><img alt=\"Icone Github\"  className={styles.github} src= {GitHubIcon} /></a>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://www.linkedin.com/in/alysson-rocha-0716a9199/\"}><img alt=\"Ícone Linkedin\" className={styles.linkedin}src ={LinkedinIcon} /> </a>                \n              </div>            \n            </div>\n            <Typography>©ALYSSON ROCHA</Typography>\n          </div>\n        </>\n      );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2bxln\",\"rotate\":\"Chart_rotate__13VCh\",\"icon\":\"Chart_icon___xppc\"};","module.exports = __webpack_public_path__ + \"static/media/rotate-phone-icon.5a256903.png\";","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","module.exports = __webpack_public_path__ + \"static/media/Stay.fd3a2370.png\";","module.exports = __webpack_public_path__ + \"static/media/github-icon.92951575.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-icon.968ea628.png\";"],"sourceRoot":""}